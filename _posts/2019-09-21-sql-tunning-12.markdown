---
layout: post
title:  "4.2 소트 머지 조인"
date:   2019-09-21
categories: SQL튜닝
---  
  
소트 머지 조인의 쓰임새가 예전만 못하지만, 해시 조인을 사용할 수 없는 상황에서 대량 데이터를 조인하고자 할 때 여전히 유용하다.
---  
## 4.2.1 SGA & PGA
---  
PGA는 다른 프로세스와 공유하지 않는 독립적인 메모리 공간이므로 레치 메커니즘이 불필요하다.  
따라서 같은 양의 데이터를 읽더라도 SGA 버퍼캐시에서 읽을 때보다 훨씬 빠르다.  
  
---  
## 4.2.2 기본 메커니즘  
---  
소트머지 조인은 두 단계로 진행된다.  
1. 소트단계 : 양쪽 집합을 조인 컬럼 기준으로 정렬한다.  
2. 머지단계 : 정렬한 양쪽 집합을 서로 머지한다.  
소트머지 조인은 use_merge 힌트로 유도한다.  
소트 머지 조인은 조인 컬럼에 인덱스가 없어도 사용할 수 있는 조인방식.  
  
---  
## 4.2.3 소트 머지 조인이 빠른 이유
---  
소트머지 조인은 양쪽 테이블로부터 조인 대상 집합에 저장한 후 조인한다.  
PGA는 프로세스만을 위한 독립적인 메모리 공간이므로 데이터를 읽을 때 래치 획득 과정이 없다.  
소트 머지 조인이 대량 데이터 조인에 유리한 이유다.  
  
---  
## 4.2.4 소트 머지 조인의 주 용도
---  
> 조인 조건식이 등치(=) 조건이 아닌 대량 데이터 조인  
> 조인 조건식이 아예 없는 조인  
  
---  
## 4.2.5 소트 머지 조인 제어하기  
---  
ordered는 FROM 절에 기술한 순서대로 조인하라고 지시하는 힌트.  
use_merge는 소트 머지 방식으로 조인하라고 지시하는 힌트.  
  
---
## 4.2.6 소트 머지 조인 특징 요약 
---  
소트머지 조인은 조인을 위해 실시간으로 인덱스 생성하는것과 다름없다.
양쪽 집합을 정렬한 다음에는 NL 조인과 같은 방식으로 진행하지만, PGA 영역에 저장한 데이터를 이용하기 때문에 빠르다.  
**조인 컬럼에 인덱스가 없는 상황에서 두 테이블을 각각 읽어 조인 대상 집합을 줄일 수 있을 때 아주 유리함**  
<br>
<br>
<br>
<br>
![img01]({{ site.baseurl }}/images/post/sqlTuning/book/bookCover.PNG)<br>
<br>
본 포스팅은 친절한 SQL 튜닝 온라인 스터디를 진행하면서 공부한 내용을 바탕으로 작성하였습니다.<br>
<br>
<br>
<br>