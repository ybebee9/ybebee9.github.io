---
layout: post
title:  "3.2 부분범위 처리 활용"
date:   2019-08-27
categories: SQL튜닝
---  
## 3.2.1 부분범위 처리
---
사용자로부터 Fetch Call이 있을 때 마다 일정량씩 나누어 전송하는것을 '부분범위 처리'라고 함.  
<br>
### Array Size 조정을 통한 Fetch Call 최소화
Array Size를 조정한다고 해서 전송해야 할 총량이 변하진 않지만, Fetch Call 횟수를 그만큼 줄일 수 있음.  
반대로, 앞쪽 일부 데이터만 Fetch 하다가 멈추는 프로그램이라면 Array Size를 작게 설정하는 것이 유리.  
<br>
### 쿼리 툴에서 부분범위 처리
오라클 사용자가 주로 사용하는 토드나 오렌지같은 뭐리 툴은 부분범위 처리 원리를 이용하는 방식으로 구현되었고,  
SQL*PLUS와 SQL Server쿼리 분석기는 부분범위 처리 원리를 이용하여 툴을 구현되지 않았다.  
모든 DBMS는 데이터를 조금씩 나눠서 전송한다. 즉, 부분범위 처리 방식으로 결과집합을 전송한다.  
이 특징을 이용해 중간에 멈췄다가 사용자의 추가 요청이 있을 때마다 데이터를 가져오도록 구현하고 안하고는 클라이언트 프로그램을 개발하는 개발자의 몫이다.
<br>
<br>
<br>
## 3.2.2 부분범위 처리 구현
--- 
부분범위 처리를 구현한 Java소스예시가 책에 들어있음.. 필요할때 책 참고하기.  
<br>
<br>
<br>
## 3.2.3 OLTP 환경에서 부분범위 처리에 의한 성능개선 원리 
---
OLTP 시스템 = 온라인 트랜잭션을 처리하는 시스템  
온라인 트랜잭션은 일반적으로 소량 데이터를 읽고 갱신.  
OLTP성 업무에서 쿼리 결과 집합이 아주 많을 때 사용자가 모든 데이터를 일일이 다 확인하지 않는다.  
특정한 정렬 순서로 상위 일부 데이터만 확인한다. ex) 은행계좌 입출금 조회 등  
인덱스를 Sort Order By 연산을 생략할 수 있또록 구성하면 극적인 성능개선 효과를 얻을 수 있다.  
디테일한 내용은 책 참조.. 
<br>
<br>
<br>
<br>
![img01]({{ site.baseurl }}/images/post/sqlTuning/book/bookCover.PNG)<br>
<br>
본 포스팅은 친절한 SQL 튜닝 온라인 스터디를 진행하면서 공부한 내용을 바탕으로 작성하였습니다.<br>
<br>
<br>
<br>